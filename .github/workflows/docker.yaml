name: Create and publish a Docker image

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: "6.0"
    - name: Install dependencies
      run: dotnet restore src/WebUI
    - name: Build
      run: dotnet build --configuration Release --no-restore src/WebUI
    - name: Test
      run: dotnet test --verbosity normal tests/Applicaton.IntegrationTests
    - name: Check Format
      run: cd src/WebUI/ClientApp && npm ci && npm run format:check

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: image-build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/campus-consult/membermanager:buildcache
          cache-to: type=registry,ref=ghcr.io/campus-consult/membermanager:buildcache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == "main" }}

    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }} 
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
        if_key_exists: replace
    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.CAMPUS_CONSULT_SERVER_IP }} >> ~/.ssh/known_hosts
    - name: Restart backend
      run: ssh ${{ secrets.CAMPUS_CONSULT_SERVER_USER }}@${{ secrets.CAMPUS_CONSULT_SERVER_IP }} 'systemctl --user restart dotnet-membermanager.service'
