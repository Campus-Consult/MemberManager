@import '~@angular/material/theming';

// mixin name will be used in main theme.scss
@mixin member-status-list-color($config-or-theme) {
  // Extract the color configuration in case a theme has been passed.
  // This allows consumers to either pass a theme object or a color configuration.
  $config: mat-get-color-config($config-or-theme);

  // retrieve variables from theme
  // (all possible variables, use only what you really need)
  $primary: map-get($config, primary);
  // $accent: map-get($config, accent);
  // $warn: map-get($config, accent);
  // $foreground: map-get($config, foreground);
  // $background: map-get($config, background);
  // all of these variables contain many additional variables
  app-member-status-list {

    .mat-row {
      min-height: 65px;

      &.selected {
        background: mat-color($primary, default);

        .mat-cell {
          color: mat-color($primary, default-contrast);
        }
      }
    }
  }
}

@mixin member-status-list-theme($theme) {
  // Extracts the color and typography configurations from the theme.
  $color: mat-get-color-config($theme);
  $typography: mat-get-typography-config($theme);

  // Do not generate styles if configurations for individual theming
  // systems have been explicitly set to `null`.
  @if $color != null {
    @include member-status-list-color($color);
  }

  /*@if $typography != null {
    @include member-status-list-typography($typography);
  }*/
}
